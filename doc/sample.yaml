# This is a sample configuration file for the application. It includes:
# - database configurations
# - application configuration

# https://docs.ansible.com/ansible/latest/reference_appendices/YAMLSyntax.html

# The application utilises the db_toolkit package (https://github.com/ib-da-ncirl/db_toolkit) for database connectivity.
# Please verify the latest configuration options in
# sample.yaml (https://github.com/ib-da-ncirl/db_toolkit/blob/master/db_toolkit/docs/sample.yaml)


# The required keys are as follows:
#   user:     user name used to authenticate
#   password: password used to authenticate
#   dbname:   the database name
# Optional keys may be set in the configuration file or on an instance, and are as follows:
#   host: database host address (defaults to UNIX socket if not provided)
#   port: connection port number (defaults to 5432 if not provided)
postgresdb:
  user: myuser
  password: mypassword
  dbname: mydatabase
  host: mypostgres.server.com
  port: 5432


# plotly requires its own specific version of orca, in the event that there is another version installed, and it is
# detected, the correct version to use may be specified here
plotly:
  orca:
    executable: /path/to/orca


sales_journal:
  # directory containing database csv files
  db_data_path: data
  # list of data sets to load, other data sets will be ignored, leave blank to load all data sets in 'db_data_path'
  load_file_sets:
#    - 01-04-2019-to-01-05-2019

  # specifies the max number of file sets that may be processed in a single run
  max_file_sets_per_run: 2

  # specifies the run mode; 'normal'- execute csv pipeline once, or 'loop'- execute csv pipeline until all file sets in 'db_data_path' are processed
  csv_pipeline_run_mode: normal

  # range of possible primary key values that will be encountered in sales journal
  sj_pk_range:
    # minimum primary key value that will be encountered
    min_sj_pk_value: 11000000
    # maximum primary key value that will be encountered
    max_sj_pk_value: 22000000

  # csv file containing info regarding sales_journal table
  sales_data_desc: cfg/sales_data_desc.csv

  # name for sales_journal table in postgres
  sales_data_table: sales_data
  # name for tracking data table in postgres
  tracking_data_table: tracking_data
  # details of tracking data table
  tracking_data_columns:
    # names of columns for uploaded data table in postgres
    names:
      - id
      - fileset
      - sj_pk_min
      - sj_pk_max
    # create args of columns for uploaded data table in postgres
    defs:
      - SERIAL PRIMARY KEY
      - TEXT
      - BIGINT
      - BIGINT
    # is column value auto created?
    auto:
      - true
      - false
      - false
      - false
  # query to get previously uploaded files
  tracking_table_query: SELECT * FROM tracking_data;
  # query to get previously uploaded files
  sales_id_query: SELECT id FROM sales_data;

  regex_patterns:
    # regex to match csv and gz csv filename of the form; ??_DD-MM-YYYY-to-DD-MM-YYYY.csv or ??_DD-MM-YYYY-to-DD-MM-YYYY.csv.gz
    set_common_pattern: '^(\w+)_(\d{2}-\d{2}-\d{4})-to-(\d{2}-\d{2}-\d{4})\.csv(.gz)?$'
    # regex to match csv filename of the form; ??_DD-MM-YYYY-to-DD-MM-YYYY.csv
    set_pattern: '^(\w+)_(\d{2}-\d{2}-\d{4})-to-(\d{2}-\d{2}-\d{4})\.csv$'
    # regex to match gz filename of the form; ??_DD-MM-YYYY-to-DD-MM-YYYY.csv.gz
    gz_set_pattern: '^(\w+)_(\d{2}-\d{2}-\d{4})-to-(\d{2}-\d{2}-\d{4})\.csv.gz$'
    # regex to match common part of filename of the form; ???XX_DD-MM-YYYY-to-DD-MM-YYYY???
    set_link_pattern: '.*(\d{2}-\d{2}-\d{4}-to-\d{2}-\d{2}-\d{4}).*'
    # regex to match sales journal filename of the form; SJ_???????
    set_sj_pattern: '^SJ_.*'
    # regex to match promos filename of the form; SJPromo_???????
    set_sjpromo_pattern: '^SJPromo_.*'
    # regex to match promos filename of the form; SJRef_???????
    set_sjref_pattern: '^SJRef_.*'
    # regex to match promos filename of the form; SJSeg_???????
    set_sjseg_pattern: '^SJSeg_.*'
    # list of required filenames to constitute a set
    set_required_elements:
      - set_sj_pattern
      - set_sjpromo_pattern
      - set_sjref_pattern
      - set_sjseg_pattern

  # regex to match dates in csv filenames of the form; ???DD-MM-YYYY???
  date_in_name_pattern: '.*(\d{2}-\d{2}-\d{4})-to-(\d{2}-\d{2}-\d{4}).*'
  # datetime format to convert dates in csv filenames of the form; ???DD-MM-YYYY???
  date_in_name_format: '%d-%m-%Y'

  # file containing configuration for plots
  plots_cfg: cfg/plots.yaml

  # set to a pipeline name to run that pipeline, or set to 'menu' to allow pipeline selection from a menu
  pipeline: menu
