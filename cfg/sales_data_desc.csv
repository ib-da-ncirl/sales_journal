ignore,root,field,optional_mandatory,loadtype,datatype,not_null,default,format,description
#,,This file is used to create the table which stores the sales data in Postgres,,,,,,,
#,,,,,,,,,
#,,"ignore column: Lines marked with #, are treated as comments and dropped when the file is loaded",,,,,,,
#,,root column: the value is used to identify entries from the same csv file,,,,,,,
#,,"NOTE: The value in the root column should generate a match with the regex used to match the names of individual csv files in a set, e.g. ‘SJ_’ is the unique portion of the Sales Journal csv export filename",,,,,,,
#,,"optional_mandatory column: indicates whether the field was optional (o) or mandatory (m) in the source database, or is modified/new (-) ",,,,,,,
#,,loadtype column: the data type to use to load the column into a pandas DataFrame. By default the type is inferred based on the datatype column.,,,,,,,
#,,datatype column: the data type to use for the column when creating the database table,,,,,,,
#,,"not_null column: indicates whether the column should have a NOT NULL constraint (y), when creating the database ",,,,,,,
#,,default column: any default value which should be specified when creating the database,,,,,,,
#,,format column: any format specifier which may be required by pandas to read the data from the csv files ,,,,,,,
#,,description column: a description of the column value,,,,,,,
#,,,,,,,,,
#,,Fields from the Sales journal,,,,,,,
,SJ_,ID,M,,SERIAL PRIMARY KEY,,,,Unique system-generated value which serves as the primary key
,SJ_,SOURCE,M,,TEXT,y,,,Point of Sale in which the component was sold/changed/cancelled
,SJ_,SALESDATE,M,TEXT,TIMESTAMP,y,,%d-%m-%Y %H:%M:%S,"Transaction date and time (date of the sale, change, cancellation or adjustment), 'DD-MM-YYYY HH:MM:SS'"
,SJ_,RESVCODE,M,,TEXT,y,,,TDP Reservation code
,SJ_,RESVCOMPSEQUENCE,M,,SMALLINT,,,,Sequence of this component within the reservation
,SJ_,ENTRYTYPE,M,,TEXT,y,,,"Entry type (SALE, RECALL, ADJUSTMENT)"
,SJ_,SEQUENCE,M,,SMALLINT,,,,"Unique sequence for unique constraint generated by trigger. (RESVCODE, RESVCOMPSEQUENCE, ENTRYTYPE, SEQUENCE) is the Unique key for the table."
,SJ_,RESVCOMPTYPE,M,,TEXT,y,,,"Reservation component type, e.g. AIR, CAR, INSURANCE, ANCILLARYAIR, LODGING, ACTIVITYTOUR, MISCELLANEOUS, PROVIDER_PENALTY, SELLER_PENALTY, ADJUSTMENT"
,SJ_,RESVCOMPSUBTYPE,O,,TEXT,,,,"Reservation component subtype. For example, for components of type ANCILLARYAIR, subtypes could be SEATFEE, BAGS, etc."
,SJ_,DESCRIPTION,O,,TEXT,,,,Description of the component
,SJ_,REMOTEREFTYPE,O,,TEXT,,,,Remote reference type
,SJ_,REMOTEREFCODE,O,,TEXT,,,,Remote reference code
,SJ_,DOCUMENTED,-,,VARCHAR(1),,,,"Y/N representing the existence in the raw data of 'Document number. For AIR components, this is the ticket number.'"
,SJ_,FARECONSTRUCTION,O,,TEXT,,,,Fare construction
,SJ_,PROVIDERCODE,O,,TEXT,,,,Provider code
,SJ_,CUSTOMERPROFILE,-,,VARCHAR(1),,,,Y/N representing the existence in the raw data of 'Identifier of the Customer in the profile system'
,SJ_,AGENCY,-,,VARCHAR(1),,,,"Y/N representing the existence in the raw data of 'Agency ID, a foreign key to the R_AGENCY table, which contains attributes for Agencies'"
,SJ_,AGENT,-,,VARCHAR(1),,,,"Y/N representing the existence in the raw data of 'Agency Agent ID, a foreign key to the R_AGENCY_AGENT table which contains attributes for Agency Agents'"
,SJ_,DOCTYPE,O,,TEXT,,,,Document type
,SJ_,TRANSACTIONCURRENCYCODE,M,,VARCHAR(3),,,,Currency code of the transaction
,SJ_,TRANSACTIONBASEAMOUNT,M,,REAL,,0,,"Transaction base amount (in the transaction currency). In case of a promotion, the base amount will include the promotion."
,SJ_,TRANSACTIONTOTALTAXAMOUNT,O,,REAL,,0,,Transaction total tax amount
,SJ_,ENTITYCURRENCYCODE,M,,VARCHAR(3),,,,"Code of the entity currency, i.e. the system currency"
,SJ_,ENTITYBASEAMOUNT,M,,REAL,,0,,Entity base amount
,SJ_,ENTITYTOTALTAXAMOUNT,O,,REAL,,0,,Entity total tax amount
,SJ_,TRANSACTIONMILESAMOUNTPAID,O,,INTEGER,,0,,Amount paid in transaction miles
,SJ_,TRANSACTIONMONEYAMOUNTPAID,O,,REAL,,0,,Amount paid in transaction money
,SJ_,CUSTOMERTYPE,O,,TEXT,,,,"Customer Type: TRAVELER, TRAVEL_AGENCY, CORPORATE"
,SJ_,MARKET,O,,TEXT,,,,"Market Type: Domestic, International"
,SJ_,PAYMENTTYPE,O,,TEXT,,,,"Payment Type: PREPAY, DEPOSIT, POSTPAY, GUARANTEE"
,SJ_,TRAVELERTYPE,O,,TEXT,,,,"Guest type for the lead traveller: CHD, ADT, INF, etc."
,SJ_,ENTITYTOTALPROMOTIONAMOUNT,O,,REAL,,0,,Entity Total Promotion Amount
,SJ_,INTERNALAGENT,-,,VARCHAR(1),,,,Y/N representing the existence in the raw data of 'The unique code of the internal agent making the transaction'
,SJ_,FIRSTDATEOFTRAVEL,O,TEXT,TIMESTAMP,,,%d-%m-%Y %H:%M:%S,"First date of travel, 'DD-MM-YYYY HH:MM:SS'"
,SJ_,LASTDATEOFTRAVEL,O,TEXT,TIMESTAMP,,,%d-%m-%Y %H:%M:%S,"Last date of travel, 'DD-MM-YYYY HH:MM:SS'"
,SJ_,PROVIDERNAME,O,,TEXT,,,,Provider Name
,SJ_,FEETYPEDESCRIPTION,O,,TEXT,,,,The description of component type
,SJ_,FEESUBTYPEDESCRIPTION,O,,TEXT,,,,The description of component sub-type
#,,"The NONREFUNDABLE column value may be empty, which causes a problem as an NaN value may not appear in an integer column in a DataFrame, so load as text and convert later",,,,,,,
,SJ_,NONREFUNDABLE,M,TEXT,SMALLINT,,0,,The flag identifies if transaction was created for effectively non-refundable component. It is 0 by default.
,SJ_,REFERENCEDCOMPONENTTYPE,O,,TEXT,,,,"Reservation referenced component type. For example, for components of type PENALTY, the referenced type could be AIR, LODGING, etc."
,SJ_,TRANSACTIONBASEREDEMPTIONAMT,O,,REAL,,0,,Transaction base amount in redemption currency
,SJ_,TRANSACTIONBASEREDEMPTIONEQUIV,O,,REAL,,0,,Money equivalent of transaction base amount in redemption currency
,SJ_,INVOICED,-,,VARCHAR(1),,,,Y/N representing the existence in the raw data of 'Invoice number'
,SJ_,LOYALTYNUMBER,-,,VARCHAR(1),,,,Y/N representing the existence in the raw data of 'The column since each transaction reflects passenger sale?????'
#,,Fields from promos,,,,,,,
,SJPromo_,TRANSACTIONPROMOTIONAMOUNT,M,,REAL,,0,,Promotion amount in the transaction currency
,SJPromo_,ENTITYPROMOTIONAMOUNT,M,,REAL,,0,,Promotion amount in the entity currency
,SJPromo_,PROMOCODE,O,,TEXT,,,,Internal Code used in TDP to uniquely identify the promotion
,SJPromo_,EXTERNALPROMOCODE,O,,TEXT,,,,"This is the Code that a user enters on the UI to apply for the promotion. This can be called Coupon Code, ExternalPromotion Code or PromotionActivation Code"
,SJPromo_,CERTIFICATE,-,,VARCHAR(1),,,,Y/N representing the existence in the raw data of 'Certificate number used for the promotion'
